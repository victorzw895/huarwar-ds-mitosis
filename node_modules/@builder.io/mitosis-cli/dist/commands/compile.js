"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }
var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;
    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }
    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
};
var __asyncValues = (this && this.__asyncValues) || function (o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
var mitosis_1 = require("@builder.io/mitosis");
var path_1 = require("path");
var get_mitosis_config_1 = require("../helpers/get-mitosis-config");
var command = {
    name: 'compile',
    alias: 'c',
    run: function (toolbox) { return __awaiter(void 0, void 0, void 0, function () {
        function readFiles() {
            return __asyncGenerator(this, arguments, function readFiles_1() {
                var data, _i, paths_1, path, data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!isStdin) return [3 /*break*/, 4];
                            return [4 /*yield*/, __await(readStdin())];
                        case 1:
                            data = _a.sent();
                            return [4 /*yield*/, __await({ data: data })];
                        case 2: return [4 /*yield*/, _a.sent()];
                        case 3:
                            _a.sent();
                            _a.label = 4;
                        case 4:
                            _i = 0, paths_1 = paths;
                            _a.label = 5;
                        case 5:
                            if (!(_i < paths_1.length)) return [3 /*break*/, 9];
                            path = paths_1[_i];
                            if (filesystem.exists(path) !== 'file') {
                                print.error("\"".concat(path, "\" is not a file"));
                                process.exit(1);
                            }
                            data = filesystem.read(path);
                            return [4 /*yield*/, __await({ path: path, data: data })];
                        case 6: return [4 /*yield*/, _a.sent()];
                        case 7:
                            _a.sent();
                            _a.label = 8;
                        case 8:
                            _i++;
                            return [3 /*break*/, 5];
                        case 9: return [2 /*return*/];
                    }
                });
            });
        }
        var parameters, strings, filesystem, print, opts, configRelPath, from_, to, out, force, dryRun, outDir, header, plugins, mitosisConfig, generatorOptions, generatorOpts, paths, isStdin, generator, _a, _b, _c, data, path, output, json, _d, e_1, isJSON, e_2_1;
        var _e, e_2, _f, _g;
        var _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;
        return __generator(this, function (_v) {
            switch (_v.label) {
                case 0:
                    parameters = toolbox.parameters, strings = toolbox.strings, filesystem = toolbox.filesystem, print = toolbox.print;
                    opts = parameters.options;
                    if ((_j = (_h = opts.l) !== null && _h !== void 0 ? _h : opts.list) !== null && _j !== void 0 ? _j : false) {
                        return [2 /*return*/, listTargets()];
                    }
                    configRelPath = (_k = opts.config) !== null && _k !== void 0 ? _k : opts.c;
                    from_ = strings.camelCase((_m = (_l = opts.f) !== null && _l !== void 0 ? _l : opts.from) !== null && _m !== void 0 ? _m : 'mitosis');
                    to = strings.camelCase((_o = opts.t) !== null && _o !== void 0 ? _o : opts.to);
                    out = (_p = opts.o) !== null && _p !== void 0 ? _p : opts.out;
                    force = (_q = opts.force) !== null && _q !== void 0 ? _q : false;
                    dryRun = (_s = (_r = opts.dryRun) !== null && _r !== void 0 ? _r : opts.n) !== null && _s !== void 0 ? _s : false;
                    outDir = opts.outDir;
                    header = opts.header;
                    plugins = [];
                    if (!opts.builderComponents) {
                        plugins.push((0, mitosis_1.compileAwayBuilderComponents)());
                    }
                    mitosisConfig = (0, get_mitosis_config_1.getMitosisConfig)(configRelPath);
                    generatorOptions = (_t = mitosisConfig === null || mitosisConfig === void 0 ? void 0 : mitosisConfig.options) === null || _t === void 0 ? void 0 : _t[to];
                    generatorOpts = __assign(__assign({}, generatorOptions), { prettier: (_u = opts.prettier) !== null && _u !== void 0 ? _u : true, plugins: __spreadArray(__spreadArray([], plugins, true), ((generatorOptions === null || generatorOptions === void 0 ? void 0 : generatorOptions.plugins) || []), true), format: opts.format, prefix: opts.prefix, includeIds: opts.includeIds, stylesType: opts.styles, stateType: opts.state, type: opts.type, api: opts.api, cssNamespace: opts.cssNamespace });
                    paths = parameters.array || [];
                    isStdin = parameters.first === '-' || paths.length === 0;
                    // Input validations
                    // Validate that "--to" is supported
                    if (!isTarget(to)) {
                        console.error("no matching output target for \"".concat(to, "\""));
                        process.exit(1);
                    }
                    generator = mitosis_1.targets[to];
                    if (out && paths.length > 1) {
                        console.error("--out doesn't support multiple input files, did you mean --outDir?");
                        process.exit(1);
                    }
                    _v.label = 1;
                case 1:
                    _v.trys.push([1, 15, 16, 21]);
                    _a = true, _b = __asyncValues(readFiles());
                    _v.label = 2;
                case 2: return [4 /*yield*/, _b.next()];
                case 3:
                    if (!(_c = _v.sent(), _e = _c.done, !_e)) return [3 /*break*/, 14];
                    _g = _c.value;
                    _a = false;
                    data = _g.data, path = _g.path;
                    output = void 0;
                    if (outDir) {
                        out = (0, path_1.join)(outDir, path);
                    }
                    // Validate that "--out" file doesn't already exist
                    if (force === false && out && filesystem.exists(out) === 'file') {
                        print.error("".concat(out, " already exists. Use --force if you want to overwrite existing files."));
                        process.exit(1);
                    }
                    _v.label = 4;
                case 4:
                    _v.trys.push([4, 11, , 12]);
                    json = void 0;
                    _d = from_;
                    switch (_d) {
                        case 'mitosis': return [3 /*break*/, 5];
                        case 'builder': return [3 /*break*/, 6];
                        case 'svelte': return [3 /*break*/, 7];
                    }
                    return [3 /*break*/, 9];
                case 5:
                    json = (0, mitosis_1.parseJsx)(data, { typescript: generatorOpts.typescript });
                    return [3 /*break*/, 10];
                case 6:
                    json = (0, mitosis_1.builderContentToMitosisComponent)(JSON.parse(data));
                    return [3 /*break*/, 10];
                case 7: return [4 /*yield*/, (0, mitosis_1.parseSvelte)(data)];
                case 8:
                    json = _v.sent();
                    return [3 /*break*/, 10];
                case 9:
                    print.error("".concat(from_, " is not a valid input type"));
                    process.exit(1);
                    _v.label = 10;
                case 10:
                    // TODO validate generator options
                    output = generator(generatorOpts)({ component: json, path: path });
                    return [3 /*break*/, 12];
                case 11:
                    e_1 = _v.sent();
                    print.divider();
                    print.info("Path: ".concat(path));
                    print.divider();
                    print.info('Error:');
                    print.error(e_1);
                    process.exit(1);
                    return [3 /*break*/, 12];
                case 12:
                    isJSON = typeof output === 'object';
                    if (!isJSON) {
                        output = header ? "".concat(header, "\n").concat(output) : output;
                    }
                    if (!out) {
                        if (isJSON) {
                            console.log(JSON.stringify(output, null, 2));
                            return [2 /*return*/];
                        }
                        console.log(output);
                        return [2 /*return*/];
                    }
                    print.info(out);
                    if (!dryRun) {
                        filesystem.write(out, output);
                    }
                    _v.label = 13;
                case 13:
                    _a = true;
                    return [3 /*break*/, 2];
                case 14: return [3 /*break*/, 21];
                case 15:
                    e_2_1 = _v.sent();
                    e_2 = { error: e_2_1 };
                    return [3 /*break*/, 21];
                case 16:
                    _v.trys.push([16, , 19, 20]);
                    if (!(!_a && !_e && (_f = _b.return))) return [3 /*break*/, 18];
                    return [4 /*yield*/, _f.call(_b)];
                case 17:
                    _v.sent();
                    _v.label = 18;
                case 18: return [3 /*break*/, 20];
                case 19:
                    if (e_2) throw e_2.error;
                    return [7 /*endfinally*/];
                case 20: return [7 /*endfinally*/];
                case 21: return [2 /*return*/];
            }
        });
    }); },
};
module.exports = command;
/**
 * List all targets (args to --to). This could be moved to it's own command at
 * some point depending on the desired API.
 */
function listTargets() {
    for (var _i = 0, _a = Object.keys(mitosis_1.targets); _i < _a.length; _i++) {
        var prop = _a[_i];
        console.log(prop);
    }
    return;
}
function isTarget(term) {
    return typeof mitosis_1.targets[term] !== 'undefined';
}
function readStdin() {
    return __awaiter(this, void 0, void 0, function () {
        var chunks;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    chunks = [];
                    return [4 /*yield*/, new Promise(function (res) {
                            return process.stdin
                                .on('data', function (data) {
                                return chunks.push(data);
                            })
                                .on('end', function () {
                                return res(true);
                            });
                        })];
                case 1:
                    _a.sent();
                    return [2 /*return*/, Buffer.concat(chunks).toString('utf-8')];
            }
        });
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9jb21waWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtDQVU2QjtBQUU3Qiw2QkFBNEI7QUFDNUIsb0VBQWlFO0FBVWpFLElBQU0sT0FBTyxHQUFtQjtJQUM5QixJQUFJLEVBQUUsU0FBUztJQUNmLEtBQUssRUFBRSxHQUFHO0lBQ1YsR0FBRyxFQUFFLFVBQU8sT0FBTztRQWdFakIsU0FBZ0IsU0FBUzs7Ozs7O2lDQUNuQixPQUFPLEVBQVAsd0JBQU87NEJBQ0ksNkJBQU0sU0FBUyxFQUFFLEdBQUE7OzRCQUF4QixJQUFJLEdBQUcsU0FBaUI7eURBQ3hCLEVBQUUsSUFBSSxNQUFBLEVBQUU7Z0NBQWQsZ0NBQWM7OzRCQUFkLFNBQWMsQ0FBQzs7O2tDQUVPLEVBQUwsZUFBSzs7O2lDQUFMLENBQUEsbUJBQUssQ0FBQTs0QkFBYixJQUFJOzRCQUNiLElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxNQUFNLEVBQUUsQ0FBQztnQ0FDdkMsS0FBSyxDQUFDLEtBQUssQ0FBQyxZQUFJLElBQUkscUJBQWlCLENBQUMsQ0FBQztnQ0FDdkMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQzs0QkFDbEIsQ0FBQzs0QkFDSyxJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzt5REFDN0IsRUFBRSxJQUFJLE1BQUEsRUFBRSxJQUFJLE1BQUEsRUFBRTtnQ0FBcEIsZ0NBQW9COzs0QkFBcEIsU0FBb0IsQ0FBQzs7OzRCQU5KLElBQUssQ0FBQTs7Ozs7O1NBUXpCOzs7Ozs7O29CQTVFTyxVQUFVLEdBQWlDLE9BQU8sV0FBeEMsRUFBRSxPQUFPLEdBQXdC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