"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
var eslint_1 = require("eslint");
var no_var_declaration_or_assignment_in_component_1 = require("../no-var-declaration-or-assignment-in-component");
var opts = {
    filename: 'component.lite.tsx',
    parserOptions: {
        ecmaVersion: 2018,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true
        }
    }
};
var ruleTester = new eslint_1.RuleTester();
ruleTester.run('no-var-declaration-or-assignment-in-component', no_var_declaration_or_assignment_in_component_1["default"], {
    valid: [
        __assign(__assign({}, opts), { code: "\n      export default function MyComponent(props) {\n        return (\n            <div />\n        );\n      }\n    " }),
        __assign(__assign({}, opts), { code: "\n      export default function MyComponent(props) {\n\n        useEffect(()=>{\n          const a = b;\n        }, [])\n\n        return (\n            <div />\n        );\n      }\n    " }),
        __assign(__assign({}, opts), { code: "\n      import x from \"y\";\n\n      export default function MyComponent(props) {\n        const context = useContext(x)\n\n        const state = useStore({ name: null })\n\n        return (\n            <div />\n        );\n      }\n    " }),
        __assign(__assign({}, opts), { code: "\n      import x from \"y\";\n\n      export default function MyComponent(props) {\n        const ref = useRef(x)\n\n        return (\n            <div />\n        );\n      }\n    " }),
        __assign(__assign({}, opts), { code: "\n          export default function MyComponent(props) {\n            const a = b;\n            \n            return (\n                <div />\n            );\n          }\n        ", filename: 'file.jsx' }),
    ],
    invalid: [
        __assign(__assign({}, opts), { code: "\n      export default function MyComponent(props) {\n        const a = b;\n        \n        return (\n            <div />\n        );\n      }\n    ", errors: ['Variable declaration inside component is ignored during compilation'] }),
        __assign(__assign({}, opts), { code: "\n      let a;\n      export default function MyComponent(props) {\n        a = b;\n        \n        return (\n            <div />\n        );\n      }\n    ", errors: ['Variable assignment inside component is ignored during compilation'] }),
        __assign(__assign({}, opts), { code: "\n      export default function MyComponent(props) {\n        let a;\n        a = b;\n        \n        return (\n            <div />\n        );\n      }\n    ", errors: [
                'Variable declaration inside component is ignored during compilation',
                'Variable assignment inside component is ignored during compilation',
            ] }),
        __assign(__assign({}, opts), { code: "\n      export default function MyComponent(props) {\n        let a;\n        a = b;\n        \n        return (\n            <div />\n        );\n      }\n    ", errors: [
                'Variable declaration inside component is ignored during compilation',
                'Variable assignment inside component is ignored during compilation',
            ] }),
    ]
});
