"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
var eslint_1 = require("eslint");
var no_map_function_in_jsx_return_body_1 = require("../no-map-function-in-jsx-return-body");
var opts = {
    filename: 'component.lite.tsx',
    parserOptions: {
        ecmaVersion: 2018,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true
        }
    }
};
var ruleTester = new eslint_1.RuleTester();
ruleTester.run('no-map-function-in-jsx-return-body', no_map_function_in_jsx_return_body_1["default"], {
    valid: [
        __assign(__assign({}, opts), { code: "\n            import { useStore, For, onMount } from '@builder.io/mitosis';\n\n            export default function MyBasicForComponent() {\n              const state = useStore({\n                name: 'Decadef20',\n                names: ['Steve', 'Decadef20'],\n              });\n            \n              onMount(() => {\n                console.log('onMount code');\n              });\n            \n              return (\n                <div>\n                  <For each={state.names}>\n                    {(person) => (\n                      <>\n                        <input\n                          value={state.name}\n                          onChange={(event) => {\n                            state.name = event.target.value + ' and ' + person;\n                          }}\n                        />\n                        Hello {person}! I can run in Qwik, Web Component, React, Vue, Solid, or Liquid!\n                      </>\n                    )}\n                  </For>\n                </div>\n              );\n            }\n            \n            " }),
    ],
    invalid: [
        __assign(__assign({}, opts), { code: "\n      export default function MyComponent() {\n        \n        return <div> {[].map()} </div>\n      }\n      ", errors: ['No map function in jsx return body. Please use <For /> component instead.'] }),
    ]
});
