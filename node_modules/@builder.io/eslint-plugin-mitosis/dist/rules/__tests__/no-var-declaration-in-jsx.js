"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
var eslint_1 = require("eslint");
var no_var_declaration_in_jsx_1 = require("../no-var-declaration-in-jsx");
var opts = {
    filename: 'component.lite.tsx',
    parserOptions: {
        ecmaVersion: 2018,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true
        }
    }
};
var ruleTester = new eslint_1.RuleTester();
ruleTester.run('no-var-declaration-in-jsx', no_var_declaration_in_jsx_1["default"], {
    valid: [
        __assign(__assign({}, opts), { code: "\n      export default function MyComponent(props) {\n        return (\n            <div>\n              {a.map(x =>{\n                return <span>{x}</span>\n              })}\n            </div>\n        );\n      }\n    " }),
        __assign(__assign({}, opts), { code: "\n      export default function MyComponent(props) {\n        return (\n            <div someProp={a.find(b => {\n              const {x} = b;\n              return x < 1;\n            })} />\n        );\n      }\n    " }),
        __assign(__assign({}, opts), { code: "\n      export default function MyComponent(props) {\n        return (\n            <div>\n              {a.map(x =>{\n                const foo = \"bar\";\n                return <span>{x}</span>\n              })}\n            </div>\n        );\n      }\n    ", filename: 'file.jsx' }),
    ],
    invalid: [
        __assign(__assign({}, opts), { code: "\n      export default function MyComponent(props) {\n        return (\n            <div>\n              {a.map(x =>{\n                const foo = \"bar\";\n                return <span>{x}</span>\n              })}\n            </div>\n        );\n      }\n    ", errors: ['Variable declaration inside jsx is ignored during compilation'] }),
    ]
});
