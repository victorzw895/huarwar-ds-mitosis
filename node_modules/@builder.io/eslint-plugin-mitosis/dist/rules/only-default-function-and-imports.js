"use strict";
exports.__esModule = true;
var types = require("@babel/types");
var hooks_1 = require("../constants/hooks");
var isMitosisPath_1 = require("../helpers/isMitosisPath");
// ------------------------------------------------------------------------------
// Rule Definition
// ------------------------------------------------------------------------------
var rule = {
    meta: {
        type: 'problem',
        docs: {
            description: 'disallow anything other than import declarations, the component itself (in a default export), and type declarations inside the component file.',
            recommended: true
        }
    },
    create: function (context) {
        // variables should be defined here
        var filename = context.getFilename();
        if (!(0, isMitosisPath_1["default"])(filename))
            return {};
        // ----------------------------------------------------------------------
        // Helpers
        // ----------------------------------------------------------------------
        // any helper functions should go here or else delete this section
        // ----------------------------------------------------------------------
        // Public
        // ----------------------------------------------------------------------
        //
        var listener = {
            Program: function (node) {
                var body = node.body;
                for (var _i = 0, body_1 = body; _i < body_1.length; _i++) {
                    var child = body_1[_i];
                    if (!types.isImportDeclaration(child) &&
                        !types.isExportDefaultDeclaration(child) &&
                        !types.isTypeAlias(child) &&
                        !types.isInterfaceDeclaration(child) &&
                        !types.isTSInterfaceDeclaration(child) &&
                        !types.isTSTypeAliasDeclaration(child) &&
                        !(types.isExportNamedDeclaration(child) &&
                            types.isTSInterfaceDeclaration(child.declaration)) &&
                        !(types.isExportNamedDeclaration(child) &&
                            types.isTSTypeAliasDeclaration(child.declaration)) &&
                        (!types.isExpressionStatement(child) ||
                            !types.isCallExpression(child.expression) ||
                            !types.isIdentifier(child.expression.callee) ||
                            child.expression.callee.name !== hooks_1.HOOKS.META_DATA)) {
                        context.report({
                            node: child,
                            message: 'Mitosis component files should only contain import declarations, the component itself (in a default export), and type declarations'
                        });
                    }
                }
            }
        };
        return listener;
    }
};
exports["default"] = rule;
